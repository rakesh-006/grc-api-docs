{
  "swagger": "2.0",
  "info": {
    "description": "This is a simple example NodeJS API project to demonstrate Swagger Documentation",
    "version": "1.0.0",
    "title": "hotel API",
    "contact": {
      "email": "abc@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "schemes": ["http"],
  "host": "http://ec2-3-110-209-222.ap-south-1.compute.amazonaws.com:3500/api",
  "basePath": "/api",
  "paths": {
    "/hotel": {
      "get": {
        "summary": "Get all the hotel",
        "description": "Get all the hotel",
        "produces": ["application/json"],
        "operationId": "getHotels",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "area": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "state": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Save the hotel",
        "description": "Save the hotel",
        "operationId": "posthotel",
        "produces": ["application/json"],
        "consumes": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "hotel object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "hotel": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "firstname": {
                      "type": "string"
                    },
                    "lastname": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "hotel": {
                    "type": "string"
                  },
                  "assignee": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/hotel/{id}": {
      "put": {
        "summary": "Update the hotel",
        "description": "Update the hotel",
        "operationId": "updatehotel",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "hotel id that needs to be deleted",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "hotel object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "hotel": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "area": {
                      "type": "string"
                    },
                    "city": {
                      "type": "string"
                    },
                    "state": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "firstname": {
                    "type": "string"
                  },
                  "lastname": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete the hotel",
        "description": "Delete the hotel",
        "operationId": "deletehotel",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "hotel id that needs to be deleted",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "area": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "state": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/menu": {
      "get": {
        "summary": "Get all the menu",
        "description": "Get all the menu",
        "produces": ["application/json"],
        "operationId": "getmenus",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/Menu"
              }
            }
          }
        }
      },
      "post": {
        "summary": "Save the menu",
        "description": "Save the menu",
        "operationId": "postmenu",
        "produces": ["application/json"],
        "consumes": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "menu object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Menu"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/Menu"
              }
            }
          }
        }
      }
    },
    "/menu/{id}": {
      "put": {
        "summary": "Update the menu",
        "description": "Update the menu",
        "operationId": "updatemenu",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "menu id that needs to be deleted",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "menu object",
            "required": true,
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/Menu"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/Menu"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete the menu",
        "description": "Delete the menu",
        "operationId": "deletemenu",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "menu id that needs to be deleted",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/Menu"
              }
            }
          }
        }
      }
    },
    "/state": {
      "get": {
        "summary": "Get all the state",
        "description": "Get all the state",
        "produces": ["application/json"],
        "operationId": "getstates",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/state"
              }
            }
          }
        }
      },
      "post": {
        "summary": "Save the state",
        "description": "Save the state",
        "operationId": "poststate",
        "produces": ["application/json"],
        "consumes": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "state object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/state"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/state"
              }
            }
          }
        }
      }
    },
    "/state/{id}": {
      "put": {
        "summary": "Update the state",
        "description": "Update the state",
        "operationId": "updatestate",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "state id that needs to be deleted",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "state object",
            "required": true,
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/state"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/state"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete the state",
        "description": "Delete the state",
        "operationId": "deletestate",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "state id that needs to be deleted",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/state"
              }
            }
          }
        }
      }
    },
    "/user": {
      "get": {
        "summary": "Get all the user",
        "description": "Get all the user",
        "produces": ["application/json"],
        "operationId": "getusers",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/user"
              }
            }
          }
        }
      },
      "post": {
        "summary": "Save the user",
        "description": "Save the user",
        "operationId": "postuser",
        "produces": ["application/json"],
        "consumes": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/user"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/user"
              }
            }
          }
        }
      }
    },
    "/user/{id}": {
      "put": {
        "summary": "Update the user",
        "description": "Update the user",
        "operationId": "updateuser",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "user id that needs to be deleted",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "user object",
            "required": true,
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/user"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/user"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete the user",
        "description": "Delete the user",
        "operationId": "deleteuser",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "user id that needs to be deleted",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/user"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "todosResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "hotel": {
          "type": "string"
        },
        "assignee": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "hotel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "area": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        }
      }
    },
    "Menu": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "hotelid": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "price": {
          "type": "string"
        }
      }
    },
    "state": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "user": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    }
  }
}
